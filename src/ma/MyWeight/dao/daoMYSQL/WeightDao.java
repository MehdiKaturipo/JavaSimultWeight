package ma.MyWeight.dao.daoMYSQL;

import ma.MyWeight.dao.IDao;
import ma.MyWeight.dao.daoException.DAOException;
import ma.MyWeight.modéle.Weight;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class WeightDao implements IDao<Weight,Long> {

    private Connection connection;
    public WeightDao(Connection connection) {
        this.connection= connection;
    }

    private  static Weight map(ResultSet resultSet) throws SQLException {
        Weight weight = new Weight();
        weight.setId(resultSet.getLong("id"));
        weight.setName(resultSet.getString("name"));
        weight.setSexe(resultSet.getString("sexe"));
        weight.setAge(resultSet.getDouble("age"));
        weight.setPoids(resultSet.getDouble("poids"));
        weight.setHeight(resultSet.getDouble("taille"));
        weight.setBmi(resultSet.getDouble("IMC"));
        return weight;
    }
    private static final String COLUMN = "id,name,sexe,age,poids,taille,IMC";
    private static final String SELECTBYID = "SELECT * FROM Weight WHERE id = ?";
    public Weight findById(Long id){
        Weight weight = null;
        ResultSet RS = null;
        PreparedStatement PS = null;
        try {
            PS= Utilitaire.initPS(connection,SELECTBYID,false,id);
            RS= PS.executeQuery();
            weight = map(RS);
            System.out.println("[SQL] : " + SELECTBYID + " " + id);}
        catch (SQLException ex) {throw new DAOException("Problem win find client Method "+ex.getMessage() );}
        finally {
            Utilitaire.closeDAOObjects(RS,PS);}
        return weight;
    }

    private static final String SELECT_ALL = "SELECT"+COLUMN+" * FROM Weight";
    public List<Weight> findAll(){
        List<Weight> weights =new ArrayList<>();
        ResultSet RS = null;
        PreparedStatement PS = null;
        try {
            PS= Utilitaire.initPS(connection,SELECT_ALL,false);
            RS= PS.executeQuery();
            System.out.println("[SQL] : " + SELECT_ALL);
            while (RS.next()){
                Weight weight = map(RS);
                weights.add(map(RS));
            }
        }catch (SQLException ex) {throw new DAOException("Problem win find client Method "+ex.getMessage() );}
        finally {Utilitaire.closeDAOObjects(RS,PS);}
        return weights;
    }
    public static String DELETE = "DELETE FROM Weight WHERE id = ?";
    public Boolean delete(Weight weight){return deleteById(weight.getId());}
    public Boolean deleteById(Long id){
        int status = 0;
        PreparedStatement PS = null;
        try {
            PS= Utilitaire.initPS(connection,DELETE,false,id);
            status =PS.executeUpdate();

            if (status == 0) throw new DAOException("suppression echoué!!! 0 ligne de la table crédit");
            else {
                System.out.println("suppression réussi !!! 1 ligne de la table crédit");
                System.out.println("[SQL] : DELETE FROM weight WHERE id = " + id);
            }
        }catch (SQLException ex) {throw new DAOException("Problem dans la Method delete"+ex.getMessage() );}
        finally {Utilitaire.closeDAOObjects(PS);}
        return true;
    }
    public static  final String INSERT_COLUMN =  "name,sexe,age,poids,taille,IMC";
    public static final String INSERT = "INSERT INTO Weight "+INSERT_COLUMN+" VALUES (?,?,?,?,?)";

    public Weight save(Weight crédit) {
        int status = 0;
        PreparedStatement PS = null;
        ResultSet autoGeneratedValues = null;
        try {
            PS= Utilitaire.initPS(connection,INSERT,true,crédit.getName(),
                    crédit.getSexe(),
                    crédit.getAge(),
                    crédit.getPoids(),
                    crédit.getHeight(),
                    crédit.getBmi());
            status =PS.executeUpdate();
            if (status == 0) throw new DAOException("insertion echoué!!! 0 ligne de la table crédit");
            autoGeneratedValues = PS.getGeneratedKeys();
            if (autoGeneratedValues.next()) {
                crédit.setId(autoGeneratedValues.getLong(1));
                System.out.println("[SQL] : INSERT INTO Weight VALUES (" +
                        crédit.getId() + "," +
                        crédit.getName() + "," +
                        crédit.getSexe() + "," +
                        crédit.getAge() + "," +
                        crédit.getPoids() + "," +
                        crédit.getHeight() + "," +
                        crédit.getBmi() + ")");
                System.out.println("Enregistrement réussi !!! id auto-generé retourné avec succès");
            } else {
                throw new DAOException("insertion echoué!!!pas id auto-generé retourné avec succès");
            }
        }catch (SQLException ex) {throw new DAOException("Problem dans la Method save"+ex.getMessage() );}
        finally {Utilitaire.closeDAOObjects(autoGeneratedValues,PS);}
        return crédit;
    }

    public static final String UPDATE_COLUMN = "name = ?,sexe = ?,age = ?,poids = ?,taille = ?,IMC = ?";
    public static final String UPDATE = "UPDATE Weight SET "+UPDATE_COLUMN+" WHERE id = ?";
    public Weight update(Weight weight) {
        int status = 0;
        PreparedStatement PS = null;
        try {
            PS= Utilitaire.initPS(connection,UPDATE,false,weight.getName(),
                    weight.getSexe(),
                    weight.getAge(),
                    weight.getPoids(),
                    weight.getHeight(),
                    weight.getBmi(),
                    weight.getId());
            status =PS.executeUpdate();
            if (status == 0) throw new DAOException("mise à jour echoué!!! 0 ligne de la table crédit");
            else {
                System.out.println("[SQL] : UPDATE crédit SET " +
                        "nom             =" +      weight.getName() + "," +
                        "Sexe             =" +        weight.getSexe() + "," +
                        "Age             =" +      weight.getAge() + "," +
                        "Poid             =" +  weight.getPoids() + "," +
                        "Taille             =" +   weight.getHeight() + "," +
                        "BMI             =" +   weight.getBmi() + "," +
                        "Where id             =" +  weight.getId() + ")");
                System.out.println("mise à jour réussi !!! 1 ligne modifiée de la table crédit");
            }
        }catch (SQLException ex) {throw new DAOException("Problem dans la Method update"+ex.getMessage() );}
        finally {Utilitaire.closeDAOObjects(PS);}
        return weight;
    }
}